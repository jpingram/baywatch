3rd of May [11:50AM] - started foundational work on BayWatch project (working title)
	created basic classes
		-Controller
		-Ticket
		-Box
		-Rect (copied from Pheonix project)
			added containsPoint function (currently untested)
	copied data.cpp/data.h from Pheonix project (to make 'freeroad' font usable)
	functions and headers for each class are defined
	main.cpp skeleton exists but no functionality yet
	primary goal for first stage is to implement box selection via mouse input
3rd of May [3:08PM] - finished build 0.1 (foundation and box selection)
	multiple boxes are able to be displayed
	clicking on a box with the mouse selects it
		also unselects other box(es) if another box was already selected
		selected boxes are red, unselected boxes are white
		added mouse coordinate debug text
3rd of May [4:19PM] - added 'select status' system
	required updates to box.h, box.cpp, and controller.cpp
	clicked on an already selected box now updates that boxes 'select status'
		standby->stage1->stage2->stage3->stage1->[...etc]
4th of May [12:34PM] - reorganized data structures
	added notes (string) instance varable to Ticket
	'ticket' in Box changed to 'tickets'
		now a vector<Ticket'>
		updated display objects in Controller to accomondate
	added label (string) instance variable to Box
	reorganized methods in Box
	created ticketQueue (vector<Ticket>) in Controller
	create Text and RectangleShape object vectors for the ticket queue
		created create and update methods to accomondate
	updated main to draw queue text and rectangle objects
	started research on SFGUI (for processing inputs)
		downloaded CMake
4th of May [3:18PM] - basic ticket info insertion (incomplete)
	created TicketBucket object to store tickets with associated statistics
		only stat right now is box number
	changed ticketQueue to a vector<TicketBucket>
	added addTicket() and removeTicket() functions to Box and Controller
		added isIdUnique() in Controller
	tested info input manually
	TicketBucket queue works, references to tickets in Box causes seg. faults
	SEE LINES:
		Controller.cpp, Line 101: adds ticket pointer to box
		Controller.cpp, Line 208: displays ticket ID of first ticket in box
	seq. fault happening on line 208
		a case of pointer losing scope/expected value is suspected
		most likely caused by line 101
7th of May [11:21AM] - basic ticket info insertion (complete)
	changed addTicket function in box to create a new Ticket object on call
		boxes now create and destroy tickets in their own scope
		changed box.h and removeTicket in box.cpp accordingly
	tested ticket adding and removing in Controller manually
	added function setBoxNum in Controller to switch tickets from box to box
	added functionality to select TicketBuckets in queue using the mouse
		added 'selected' bool in TicketBucket with appropriate getter/setter
		added bucket selection methods/instance variables to Controller
		modified queue display objects to display selected bucket
	UPDATE [11:36AM] - create git repository for BayWatch project
		https://github.com/jpingram/baywatch
		all current BayWatch directory files from 11:21AM build are included
9th of May [11:53AM] - SFGUI installation (incomplete)
	researched SFGUI installation methods
	downloaded required files
		SFGUI 0.4.0 source (needs to be built)
		CMake
			computer did not want to cooperate downloading CMake
	CMake installed
14th of May [5:42PM] - GUI Library Installation: Attempt #2
	abandoned SFGUI
		too many incompatibility issues
		tried without CMAKE, failed to build when finally compiled
	downloaded TGUI 0.8.5
		reportedly simple to implement into SFML
		version 0.8.5 is already pre-built
		should work with current C++ compiler (MinGW 5.1.0)
15th of May [10:42PM] - GUI Library Installation (Complete)
	Texus' GUI successfully installed
		example TGUI program builds and runs
	ready to begin planning for BayWatch user input
15th of May [4:04PM] - first instance of GUI integration into project
	BayWatch 0.2 initiated
		GOAL: integrate GUI pop up windows to handle user input
		GOAL: allow for ticket creation, ticket editing, and ticket removal
	included required libraries into main.cpp
		TGUI/TGUI.hpp
		<memory> (for dynamic_pointer_cast<>())
		others which may no longer be necessary
	pop-up window allows for user input
		ticket ID EditBox
		vehicle info EditBox
		bay info ComboBox (drop-down menu)
		'OK' button
		'Cancel' button
	window calls addTicket() when 'OK' is pressed
		both 'OK' and 'Cancel' make window invisible
		POSSIBLE TODO: change buttons to close the window instead
			unsure if it would cause functionality complications
	if info allows for a legal vehicle input, new ticket is successfully created
	TODO: allow for multiple uses of vehicle input window
	TODO: clean-up code
		learning important TGUI functions created some excess code
			namely the connect() function for widgets/signals
		excess commented out but still there
		code may need some reorganization
16th of May [2:00PM] - Aplha 0.2.2 user input/ticket creation cont'd
	added menu bar
		edited creation and use of 'vwindow' to work with menu bar
			only one vwindow can be open at a given time
		designed so selections can't be made while mouse is on the widget
	"Ticket" menu category
		"New" - creates a new vwindow
			vwindow adds ticket info when 'OK' is pressed then closes
			this system allows for multiple tickets to be created
		"Edit" - creates new vwindow
			populates window info with info from selected ticketbucket
			updates selected ticketbucket data with info from vwindow
			NOTE: currently only correctly changes BoxNum
	selections no longer happen/change while a vwindow is open
	added newVehicleWindow() in main
	added functionality for 'status' in main
	minor changes to Controller
		added getters for boxList and ticketQueue in Controller
		tweeked setBoxNum in Controller
	added 'windowType' enum in main
		'a' for 'add' and 'e' for 'edit'
		for use with newVehicleWindow()
	added Label and EditBox in vwindow for notes info
		placed between vehicle info and box number info
16th of May [4:18PM] - Alpha 0.2 Completed!
	user can now add, edit, and remove tickets using a GUI
		functional but ugly
	"Ticket" menu category
		"Remove"
			removes a ticketbucket (and it's ticket) from queue
			calls c.removeTicket()
				removes ticket from the box it is in, if in any
			ticketbucket must already be selected to work
				like "Edit", prints to cerr if no selection
			FUTURE TODO: in-program pop-up error message boxes?
	updateTicket() function added in Controller
		calls updateTicket in ticketbucket
		updates info of ticket in box if ticket is in a box
	"Edit" function now works just fine
		ID, Vehicle, and Notes data now appear in vwindow
			all changes correctly update in ticket when 'OK' is pressed
		needed to change getTicketQueue in Controller
			new returns pointer to vector instead of a vector object
	minor housekeeping done in main.cpp
		some commented out code removed
		some MACROs reorganized
		default flavor text added to vwindow
17th of May [10:37AM] - first functional prototype created
	minor bug fix
		using the close button on the vwindow safely usable 
		close button usage previously broke the status system
	saved completed Alpha 0.2.3 directory remotely
	UPDATE: functional prototype saved is a non-stable build
		vwindow bug fix was not implemented properly and caused more issues
		new issues still pertained to vwindow closing events
		errors addressed and fixed
17th of May [2:22PM] - bug safari and formatting
	as stated, errors with vwindow closing event issues
		'OK', 'Cancel', and the close button all close the window
	fixed issue with window resizing
		main now tracks both 'real' and 'relative' mouse position
		relative mouse coordinates displayed in green on each mouse click
	changed boxTextObjects in Controller
		data type altered from vector<sf::Text> to tgui::Gui
		createBoxObjects() fills gui with functionally similar tgui::Labels
		Controller.h declaration and getter updated accordingly
		updateBoxObjects() updated
		main window drawing code changed to accommodate for transition
		setRengerTarget added in Controller to accommodate for transition
	comboBox in vwindow now pulls box names directly from boxes
	box names now centered in boxes on display window
	boxes now touch and cover full upper half of the screen
		box size MACROs and box location MACROs added in Controller.h
	updated functional prototype directory to current project version
17th of May [4:16PM] - more formatting
	increased font size of box labels to 27
	increased font sizes of ticket id and vehicle labels to 21
	moved real/relative mouse location displays to bottom-right corner of window
18th of May [3:21PM] - Alpha 0.4 initiated, main goals: bay menu, timers
	installed a "time-of-life" system for ticket buckets
		imported <chrono>
		added a time_stamp object in Controller to track current time
		updated Controller::update() to update time_stamp
		added birthPoint time_stamp in TicketBucket
			defined by steady_clock::now() in constructor
			TicketBucket::setBirthPoint() created as back-up
		added TicketBucket::getTimeSinceBirthAsString()
			returns time elapsed as "#h #m #s"
		queueTextObjects now include time-of-life string
	added a boxTextObject that displays when there are vehicles waiting for a bay
		displays as "Vehicles Waiting: x"
		where x = the number of waiting vehicles in box's queue
	added "Bay" in menu
		"Edit" option
			allows user to edit the label of a selected box
	fixed minor bug in vwindow closing/"Cancel" event
		added "closed" window status
		removed all calls to vwindow->destroy() from the vwindow itself
20th of May [3:28PM] - Alpha 0.4.2, more Bay menu options, bay timer added
	added timer to Box
		'activeStartPoint' time_point object
		added getter and setter for activeStartPoint
		activeStartPoint resets when 'true' is passed to Box::setActive()
		boxTextObject created to display time since Box was activated
		'active' status in Box now affected by number of tickets in queue
			true if tickets exist in queue
			false if ticket queue in box is empty
	added 'active' status boolean to TicketBucket
		added getter and setter for 'active'
		no current use
	new options under "Bay" in menu
		"Clear Active Ticket" option
			clears the ticket currently at front of queue in selected box
			finds bucket of currently active ticket in box
			sets boxNum in that ticket's bucket to -1
			by extension, erases ticket object from selected box's queue
		"Clear All Tickets" option
			clears all tickets in selected box
			same fashion as "Clear Active Ticket"
	added new helper functions
		short Controller::getBucketIndexById(std::string id);
		void Controller::removeActiveTicketFromBox(unsigned short s);
    		void Controller::removeAllTicketsFromBox(unsigned short s);
		void Box::removeTicketByIndex(unsigned short s);
		std::string Box::getTimeSinceActiveAsString([time_point] p);
	queueTextObjects now display label of current box 
		(index of box denoted by boxNum of bucket)
	updated "Ticket" -> "Edit" in menu 
		now allows to edit active ticket of selected box
	updated "Ticket" -> "New" in menu
		'bayLabel' comboBox value now defaults to selected box, if applicable
20th of May [5:29PM] - Alpha 0.4.3 - Bay Display Window!
	added window2 object in main
	added openBayDiplayWindow() and closeBayDisplayWindow in main
	"Window" menu option
		"Show Bay Display Window" & "Close Bay Display Window"
			only one is active at a time
			opens or closes the "bay display" window
			depends on if window 2 is already open or not
	window2, when open, shows clone of complete main window display
		no box/bucket selection interactivity or GUI
		can be made fullscreen (title bar still shows)
	display does not update when dragging an SFML window
		does not effect timers or main functionality
	otherwise, no known errors
21st of May [4:51PM] - Alpha 0.5 - functionality and display updates
	added display for "Notes" of tickets in an active box
	updated maximum values for "Vehicle Info" and "Notes
		40 and 125 characters, respectively
	"Notes" info now gets truncated in queue object if over 80 characters
	text in "Vehicle Info" and "Notes" labels now wrap-around
		text confined to individual boxes
	removed default text for ID and Vehicle Info of tickets in Box
		originally "..."
	queue and box objects now flicker when info is edited on them
		flickers yellow for six seconds
		text changes colors to white when their backgrounds are yellow
		in both Box and TicketBucket
			added static flicker duration variables
			added mostRecentUpdatePoint time_point (m.R.U.P.)
			added setMostRecentUpdatePoint()
			added onFlicker(), returns true if Box/Bucket is on a flicker
				on a flicker -> background should be yellow
			updated all info-update functions to update m.R.U.P.
			updated constructors to include m.R.U.P
	borders of Boxes now White only if Box is selected
	if Box is active, borders become green
		borders turn yellow after an amount of active time
		borders turn red after a longer amount of active time
		color change time frames determined by MACROs in box.h
			currently 900 secs. (15 min.) and 1800 secs. (30 min.)
	in vwindow
		'OK' is not allowed to be pressed if
			there is no ID entered
			ID entered is already in use
			Vechicle Info is over max characters
			Notes is over max characters
		error message appears in red in vwindow in above conditions
		works in both 'Add' and 'Edit' mode
	TWO Bay Display Windows now usable
		'window3' hardcoded in similar fashion to window2
		'Window' menu options update to work with both windows
		started work on vector<sf::RenderWindow*> to automate display windows
			scrapped code on seg fault errors
			realized the cause of the error after 'window3' was hardcoded
			might revisit this idea if need be in the future
	no known errors
22nd of May [1:34PM] - Alpha 0.5.1 - first 'Release' build
	cleaned code up a little
	removed display of mouse coordinates from all displays
	added "Embassy Tire & Wheel" logo as window icon
		added 'logo32' (png) to data.cpp/data.h
	added destructor to Box
		Box seemed to be the only class with dynamically allocated objects
	changed project's Release build options
		exports to "BayWatch 0.5.1.exe"
		exports as "GUI Application" as opposed to "Consoloe Application"
			removes console window
24th of May [10:00PM] - minor bug fix
	error message system in vwindow prevented trivial ticket editting
		tickets being edited would have the same ID as itself
		""Ticket ID" is already being used." error
		'OK' "pressed" function now checks if new ID is equal to current ID